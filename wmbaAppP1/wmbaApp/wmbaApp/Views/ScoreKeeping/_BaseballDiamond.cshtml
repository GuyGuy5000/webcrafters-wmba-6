@model wmbaApp.ViewModels.InningScoreKeepingVM


<!--Stores the current inning's data-->
<input type="hidden" id="inningScoreKeepingJSON" value='@Json.Serialize(Model)' />
<<<<<<< HEAD
=======
﻿@* @model IEnumerable<wmbaApp.ViewModels.PlayerScoreKeepingVM> *@
@model wmbaApp.ViewModels.InningScoreKeepingVM


<!--Stores the current inning's data-->
<<<<<<< HEAD
<input type="hidden" id="inningScoreKeeping" value='@Json.Serialize(Model)' />
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
<input type="hidden" id="inningScoreKeepingJSON" value='@Json.Serialize(Model)' />
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)

<section>
    <div class="diamond-container">
        <!--Position labels-->
        <div class="position-label first-base">
            <p>1B</p>
        </div>

        <div class="position-label second-base">
            <p>2B</p>
        </div>

        <div class="position-label third-base">
            <p>3B</p>
        </div>

        <div class="position-label short-stop">
            <p>SS</p>
        </div>

        <div class="position-label left-field">
            <p>LF</p>
        </div>

        <div class="position-label center-field">
            <p>CF</p>
        </div>

        <div class="position-label right-field">
            <p>RF</p>
        </div>
        <!--Position labels-->
        <!--players on base labels-->
        <div class="player-label current-batter">
            @Model.Batter?.Name&nbsp;
        </div>
        <div class="player-label first-base-label">
            @Model.PlayerOnFirst?.Name&nbsp;
        </div>
        <div class="player-label second-base-label">
            @Model.PlayerOnSecond?.Name&nbsp;
        </div>
        <div class="player-label third-base-label">
            @Model.PlayerOnThird?.Name&nbsp;
        </div>
        <!--players on base labels-->
        <!--Player on base prompts-->
        @{
            //check if any runners are on base
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
            bool handleThirdBase = (bool)TempData.Peek("HandleThirdBase");
            bool handleSecondBase = (bool)TempData.Peek("HandleSecondBase");
            bool handleFirstBase = (bool)TempData.Peek("HandleFirstBase");

            //if a player is on base and is flagged to be handled
            if (Model.PlayerOnThird != null && handleThirdBase)
<<<<<<< HEAD
=======
            if (Model.PlayerOnThird != null && (bool)TempData["HandleThirdBase"])
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
            if (Model.PlayerOnThird != null && handleThirdBase)
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
            {
                <div class="player-on-base-prompt third-base-prompt">
                    <p style="color: #000; margin-bottom: 0;">Did @Model.PlayerOnThird.Name advance to home base?</p>
                    <button name="playerOnBase" id="thirdBaseSafe" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                    @{
                        if (!Model.Batter.ThirdBase) //force play actions disabled if batter hits a triple
<<<<<<< HEAD
<<<<<<< HEAD
=======
                        if (!Model.Batter.ThirdBase)
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> 29e156e (fixed merged solution issue)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
                        {
                            <button name="playerOnBase" id="thirdBaseStay" type="button" value="stay" style="color: #000; background-color: #FFF;">stay on base &#8211;</button>
                        }
                    }
                    <button name="playerOnBase" id="thirdBaseOut" type="button" value="out" style="color: #900; background-color: #F8F8F8;">Out &#10005;</button>
                </div>
            }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
            else if (Model.PlayerOnSecond != null && handleSecondBase)
=======
            else if (Model.PlayerOnSecond != null && (bool)TempData["HandleSecondBase"])
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
            else if (Model.PlayerOnSecond != null && handleSecondBase)
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
            else if (Model.PlayerOnSecond != null && handleSecondBase)
>>>>>>> b47d29c (reset main branch to Nadav)
            {
                <div class="player-on-base-prompt second-base-prompt">
                    <p style="color: #000; margin-bottom: 0;">Did @Model.PlayerOnSecond.Name advance?</p>
                    @{
                        if (Model.Batter.SecondBase) //force play actions if batter hits a double
                        {
                            if (Model.PlayerOnThird == null) //no runner on third base
                            {
                                <button name="playerOnBase" id="secondBaseThird" type="button" value="3rd" style="color: #2e8b43; background-color: #FFF;">Advance to 3rd &#10003;</button>
                                <button name="playerOnBase" id="secondBaseHome" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                            }
                        }
                        else if (Model.Batter.ThirdBase) //more limited force play actions if the batter hits a triple
                        {
                            <button name="playerOnBase" id="secondBaseHome" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                        }
                        else // regular advance actions
                        {
                            if (Model.PlayerOnThird == null)
                            {
                                <button name="playerOnBase" id="secondBaseThird" type="button" value="3rd" style="color: #2e8b43; background-color: #FFF;">Advance to 3rd &#10003;</button>
                                <button name="playerOnBase" id="secondBaseHome" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                            }
                            <button name="playerOnBase" id="secondBaseStay" type="button" value="stay" style="color: #000; background-color: #FFF;">stay on base &#8211;</button>
                        }
                    }
                    <button name="playerOnBase" id="secondBaseOut" type="button" value="out" style="color: #900; background-color: #F8F8F8;">Out &#10005;</button>
                </div>
            }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
            else if (Model.PlayerOnFirst != null && handleFirstBase)
            {
                <div class="player-on-base-prompt first-base-prompt">
                    <p style="color: #000; margin-bottom: 0;">Did @Model.PlayerOnFirst.Name advance?</p>
                    @{
                        if (Model.Batter.FirstBase) //force play actions if batter hits a single
                        {
                            if (Model.PlayerOnSecond == null) //no runner on second base
                            {
                                <button name="playerOnBase" id="firstBaseSecond" type="button" value="2nd" style="color: #2e8b43; background-color: #FFF;">Advance to 2nd &#10003;</button>

                                if (Model.PlayerOnThird == null) //no runner on third base either
                                {
                                    <button name="playerOnBase" id="firstBaseThird" type="button" value="3rd" style="color: #2e8b43; background-color: #FFF;">Advance to 3rd &#10003;</button>
                                    <button name="playerOnBase" id="firstBaseHome" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                                }
                            }
                        }
                        else if (Model.Batter.SecondBase) //more limited force play actions if the batter hits a double
                        {
                            if (Model.PlayerOnThird == null)
                            {
                                <button name="playerOnBase" id="firstBaseThird" type="button" value="3rd" style="color: #2e8b43; background-color: #FFF;">Advance to 3rd &#10003;</button>
                                <button name="playerOnBase" id="firstBaseHome" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                            }
                        }
                        else if (Model.Batter.ThirdBase)
                        {
                            <button name="playerOnBase" id="firstBaseHome" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                        }
                        else // regular advance actions
                        {
                            if (Model.PlayerOnSecond == null) //no runner on second base
                            {
                                <button name="playerOnBase" id="firstBaseSecond" type="button" value="2nd" style="color: #2e8b43; background-color: #FFF;">Advance to 2nd &#10003;</button>

                                if (Model.PlayerOnThird == null) //no runner on third base either
                                {
                                    <button name="playerOnBase" id="firstBaseThird" type="button" value="3rd" style="color: #2e8b43; background-color: #FFF;">Advance to 3rd &#10003;</button>
                                    <button name="playerOnBase" id="firstBaseHome" type="button" value="home" style="color: #2e8b43; background-color: #FFF;">Advance to home &#10003;</button>
                                }
                            }
                            <button name="playerOnBase" id="firstBaseStay" type="button" value="stay" style="color: #000; background-color: #FFF;">stay on base &#8211;</button>
                        }
                    }
                    <button name="playerOnBase" id="firstBaseOut" type="button" value="out" style="color: #900; background-color: #F8F8F8;">Out &#10005;</button>
                </div>
            }
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        }
        <!--Player on base prompts-->
        <!--Batter actions prompt-->
        @{
            //after all bases were handled, the next batter action happens
            if (!handleFirstBase && !handleSecondBase && !handleThirdBase)
            {
                <div class="batter-action-button-container">
                    <button id="btnBatterAction" type="button" class="batter-action-button" onclick="ShowBatterAction()">PITCH</button>
                </div>
                <div id="batterActionPrompt" class="batter-prompt">
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)
                    <p style="color: #000; margin-bottom: 0;">Choose an action for @Model.Batter.Name</p>
                    <input id="btnCloseBatterActions" type="button" class="btn-close-batter-prompt" value="X" onclick="HideBatterAction()" />
                    @Html.DropDownList("BatterActionList", null, htmlAttributes: new { @class = "form-control", size="15", style="font-weight: 600; max-width: 180px; margin: 10px auto;" })
                    <button id="batterActionSubmit" type="button" class="btn-batter-action-submit">Confirm play</button>
                </div>

                //if any player has the opportunity to steal a base
                if ((Model.PlayerOnFirst != null && Model.PlayerOnSecond == null)
                 || (Model.PlayerOnSecond != null && Model.PlayerOnThird == null)
                 || Model.PlayerOnThird != null)
                {
                    <div class="steal-prompt-container">
                        @{
                            if (Model.PlayerOnFirst != null && Model.PlayerOnSecond == null) //check for each possible steal play individually
                            {
                                <div class="steal-prompt">
                                    <button name="stealPrompt" id="stealSecond" type="button" class="btn-steal-prompt">Steal Second Base</button>
                                </div>
                            }

                            if (Model.PlayerOnSecond != null && Model.PlayerOnThird == null) 
                            {
                                <div class="steal-prompt">
                                    <button name="stealPrompt" id="stealThird" type="button" class="btn-steal-prompt">Steal Third Base</button>
                                </div>
                            }

                            if (Model.PlayerOnThird != null)
                            {
                                <div class="steal-prompt">
                                    <button name="stealPrompt" id="stealHome" type="button" class="btn-steal-prompt">Steal Home Base</button>
                                </div>
                            }

                        }
                    </div>
                }
            }
        }

        @* @Html.DropDownList("BatterUpNext", null, htmlAttributes: new { @class = "form-control batter-up-next-dropdown", disabled = "disabled" }) *@

<<<<<<< HEAD
=======
                    @Html.DropDownList("BatterActionList", null, htmlAttributes: new { @class = "form-control", size="15", style="font-weight: 600;" })
                    <button id="batterActionSubmit" type="button" class="btn-batter-action-submit">Confirm play</button>
                </div>
            }
        }
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
        <!--Batter actions prompt-->
=======
                    <p style="color: #000; margin-bottom: 0;">Choose an action for @Model.Batter.Name</p>
                    <input id="btnCloseBatterActions" type="button" class="btn-close-batter-prompt" value="X" onclick="HideBatterAction()" />
                    @Html.DropDownList("BatterActionList", null, htmlAttributes: new { @class = "form-control", size="15", style="font-weight: 600; max-width: 180px; margin: 10px auto;" })
                    <button id="batterActionSubmit" type="button" class="btn-batter-action-submit">Confirm play</button>
                </div>

                //if any player has the opportunity to steal a base
                if ((Model.PlayerOnFirst != null && Model.PlayerOnSecond == null)
                 || (Model.PlayerOnSecond != null && Model.PlayerOnThird == null)
                 || Model.PlayerOnThird != null)
                {
                    <div class="steal-prompt-container">
                        @{
                            if (Model.PlayerOnFirst != null && Model.PlayerOnSecond == null) //check for each possible steal play individually
                            {
                                <div class="steal-prompt">
                                    <button name="stealPrompt" id="stealSecond" type="button" class="btn-steal-prompt">Steal Second Base</button>
                                </div>
                            }

                            if (Model.PlayerOnSecond != null && Model.PlayerOnThird == null) 
                            {
                                <div class="steal-prompt">
                                    <button name="stealPrompt" id="stealThird" type="button" class="btn-steal-prompt">Steal Third Base</button>
                                </div>
                            }

                            if (Model.PlayerOnThird != null)
                            {
                                <div class="steal-prompt">
                                    <button name="stealPrompt" id="stealHome" type="button" class="btn-steal-prompt">Steal Home Base</button>
                                </div>
                            }

                        }
                    </div>
                }
<<<<<<< HEAD
                <!--Batter actions prompt-->
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
            }
        }

        @* @Html.DropDownList("BatterUpNext", null, htmlAttributes: new { @class = "form-control batter-up-next-dropdown", disabled = "disabled" }) *@

        <!--Batter actions prompt-->
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
        <!--Batter actions prompt-->
>>>>>>> b47d29c (reset main branch to Nadav)
    </div>
</section>
<section>
    <div class="inning-tracker-container">
        <!--Play by play-->
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        <div id="playByPlayContainer" class="play-by-play-container">
            <h4 style="text-align: center; font-weight: 800;">Play-By-Play</h4>
            <ol class="play-by-play-list">
                <li><div class="green-play-indicator">1B</div>Player one - Single</li>
                <li><div class="red-play-indicator">X</div>Player Two - Double</li>
            </ol>
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        </div>

        <!--inning information-->
        <div class="inning-info-container">
            <h4 style="text-align: center; font-weight: 800;">Current Count</h4>
<<<<<<< HEAD
=======
        <div>
=======
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
        </div>

        <!--inning information-->
        <div class="inning-info-container">
<<<<<<< HEAD
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
            <h4 style="text-align: center; font-weight: 800;">Current Count</h4>
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
            <table class="w-100">
                <tr>
                    <th></th>
                    <th></th>
                </tr>
                <tr>
                    <td class="inning-info-header">
                        <p>Balls</p>
                    </td>
                    <td>
                        @{
                            int remainingChecksBalls = 0;
                            string outputBalls = "";
                            for (int i = 0; i < Model.Batter.Balls; i++)
                            {
                                remainingChecksBalls++;
                                outputBalls += "<div class='green-indicator'></div>";
                            }
                            for (int i = remainingChecksBalls; i < 4; i++)
                            {
                                outputBalls += "<div class='blank-indicator'></div>";
                            }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                            outputBalls += $"<p class='number-indicator'>({Model.Batter.Balls})</p>";
=======
                            outputBalls += $"<p class='number-indicator' style='font-size: 24px;'>({Model.Batter.Balls})</p>";
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
                            outputBalls += $"<p class='number-indicator'>({Model.Batter.Balls})</p>";
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
                            outputBalls += $"<p class='number-indicator'>({Model.Batter.Balls})</p>";
>>>>>>> b47d29c (reset main branch to Nadav)

                            @Html.Raw(outputBalls)
                        }
                    </td>
                </tr>
                <tr>
                    <td class="inning-info-header">
                        <p>Strikes</p>
                    </td>
                    <td>
                        @{
                            int remainingChecksStrikes = 0;
                            string outputStrikes = "";
                            for (int i = 0; i < Model.Batter.Strikes; i++)
                            {
                                remainingChecksStrikes++;
                                outputStrikes += "<div class='red-indicator'></div>";
                            }
                            for (int i = remainingChecksStrikes; i < 3; i++)
                            {
                                outputStrikes += "<div class='blank-indicator'></div>";
                            }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                            outputStrikes += $"<p class='number-indicator'>({Model.Batter.Strikes})</p>";
=======
                            outputStrikes += $"<p class='number-indicator' style='font-size: 24px;'>({Model.Batter.Strikes})</p>";
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
                            outputStrikes += $"<p class='number-indicator'>({Model.Batter.Strikes})</p>";
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
                            outputStrikes += $"<p class='number-indicator'>({Model.Batter.Strikes})</p>";
>>>>>>> b47d29c (reset main branch to Nadav)

                            @Html.Raw(outputStrikes)
                        }
                    </td>
                </tr>
                <tr>
                    <td class="inning-info-header">
                        <p>Outs</p>
                    </td>
                    <td>
                        @{
                            int remainingChecksOuts = 0;
                            string outputOuts = "";
                            for (int i = 0; i < Model.TotalOutsThisInning; i++)
                            {
                                remainingChecksOuts++;
                                outputOuts += "<div class='red-indicator'></div>";
                            }
                            for (int i = remainingChecksOuts; i < 3; i++)
                            {
                                outputOuts += "<div class='blank-indicator'></div>";
                            }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                            outputOuts += $"<p class='number-indicator'>({Model.TotalOutsThisInning})</p>";

                            @Html.Raw(outputOuts)
=======
                            outputOuts += $"<p class='number-indicator' style='font-size: 24px;'>({Model.TotalOutsThisInning})</p>";

                            @Html.Raw(outputOuts)

>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
                            outputOuts += $"<p class='number-indicator'>({Model.TotalOutsThisInning})</p>";

                            @Html.Raw(outputOuts)
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
                            outputOuts += $"<p class='number-indicator'>({Model.TotalOutsThisInning})</p>";

                            @Html.Raw(outputOuts)
>>>>>>> b47d29c (reset main branch to Nadav)
                        }
                    </td>
                </tr>
            </table>
        </div>
<<<<<<< HEAD
=======
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
        }
        <!--Player on base prompts-->
<<<<<<< HEAD

>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
        <!--Batter actions prompt-->
        @{
            if (!handleFirstBase && !handleSecondBase && !handleThirdBase)
            {
                <div class="batter-action-button-container">
                    <button id="btnBatterAction" type="button" class="batter-action-button" onclick="ShowBatterAction()">PITCH</button>
                </div>
                <div id="batterActionPrompt" class="batter-prompt">
                    @Html.DropDownList("BatterActionList", null, htmlAttributes: new { @class = "form-control", size="15" })
                </div>
            }
        }
        <!--Batter actions prompt-->
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
    </div>
</section>

<<<<<<< HEAD
<<<<<<< HEAD
<style>
    /*Baseball diamond*/
=======

=======
>>>>>>> c4ae6ca (Added pitch button and batter actions select list for scorekeeping.)
<style>
<<<<<<< HEAD
<<<<<<< HEAD
    /*Baseball diamond and players*/
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
>>>>>>> 2403aa7 (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> 29e156e (fixed merged solution issue)
<<<<<<< HEAD
>>>>>>> 3b13cb3 (fixed merged solution issue)
=======
=======
    /*Baseball diamond*/
>>>>>>> a918cb0 (working on adding stealing base functionality)
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
    </div>
</section>

<style>
    /*Baseball diamond*/
>>>>>>> b47d29c (reset main branch to Nadav)
    .diamond-container {
        background-image: url(../../Image/baseball-diamond.png);
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
        display: block;
        height: 648px;
        margin: 0 auto;
        width: 709px;
    }

    .position-label {
        background-color: rgba(0,0,0,0.5);
        border-radius: 5px;
        color: #FFF;
        font-size: 19px;
        font-weight: 600;
        height: 30px;
        position: relative;
        text-align: center;
        width: 30px;
    }

    .player-label {
        background-color: rgba(0,0,0,0.5);
        border-radius: 5px;
        color: #FFF;
        display: flow;
        font-size: 16px;
        font-weight: 600;
        height: 50px;
        position: relative;
        text-align: center;
        width: 90px;
    }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    /*Prompt for runners and batter*/
=======
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
    /*Prompt for runners and batter*/
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
    /*Prompt for runners and batter*/
>>>>>>> b47d29c (reset main branch to Nadav)
    .player-on-base-prompt {
        background: rgba(255,255,255,0.8);
        border: 2px solid #000;
        border-radius: 5px;
        color: #FFF;
        font-size: 12px;
        font-weight: 600;
        height: auto;
        padding: 2px 0;
        position: relative;
        text-align: center;
        width: 140px;
    }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
    .batter-prompt {
        background: rgba(255,255,255,0.8);
        border: 2px solid #000;
        border-radius: 5px;
        color: #FFF;
        display: none;
        font-size: 12px;
        font-weight: 600;
        height: auto;
        left: 233px;
        padding: 2px 0;
        position: relative;
        text-align: center;
        top: -270px;
        width: 250px;
    }

    #BatterActionList {
        font-size: 14px;
    }

    .player-on-base-prompt button {
        border: 0;
        border-top: 2px solid #000;
        border-bottom: 2px solid #000;
        font-weight: 600;
        height: 28px;
        margin: 1px 0 1px 0;
        width: 100%;
    }

        .player-on-base-prompt button:hover {
            font-weight: 800;
            height: 29px;
            margin: 2px 0 2px 0;
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)
            width: 100%;
        }

    .batter-action-button-container {
        background-color: #FFF;
        border: 2px solid #000;
        height: 60px;
        left: 324px;
        position: relative;
        transform: rotate(45deg);
        top: -68px;
        width: 60px;
    }

    .batter-action-button {
        background-color: rgba(0,0,0,0);
        border: none;
        font-weight: 600;
        height: 60px;
        transform: rotate(-45deg);
        width: 60px;
    }

        .batter-action-button:hover {
            font-weight: 800;
        }

    .btn-batter-action-submit {
        font-weight: 600;
        height: 35px;
        margin: 5px 0;
        width: 100px;
    }
<<<<<<< HEAD
<<<<<<< HEAD
=======
        .player-on-base-prompt button {
            border: 0;
            border-top: 2px solid #000;
            border-bottom: 2px solid #000;
            font-weight: 600;
            height: 28px;
            margin: 1px 0 1px 0;
            width: 100%;
        }

            .player-on-base-prompt button:hover {
                font-weight: 800;
                height: 29px;
                margin: 2px 0 2px 0;
                width: 100%;
            }
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
            width: 100%;
        }

    .batter-action-button-container {
        background-color: #FFF;
        border: 2px solid #000;
        height: 60px;
        left: 324px;
        position: relative;
        transform: rotate(45deg);
        top: -68px;
        width: 60px;
    }

    .batter-action-button {
        background-color: rgba(0,0,0,0);
        border: none;
        font-weight: 600;
        height: 60px;
        transform: rotate(-45deg);
        width: 60px;
    }

        .batter-action-button:hover {
            font-weight: 800;
        }
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> 29e156e (fixed merged solution issue)

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======

>>>>>>> b47d29c (reset main branch to Nadav)
    .btn-close-batter-prompt{
        position: relative;
        left: 110px;
        top: -17px;
    }

    /*Steal prompt*/
    .steal-prompt-container{
        border-radius: 5px;
        color: #FFF;
        font-size: 12px;
        font-weight: 600;
        height: auto;
        left: 625px;
        padding: 2px 0;
        position: relative;
        text-align: center;
        top: -40px;
        width: 140px;
    }

    .btn-steal-prompt{
        background-color: #900;
        border: 2px solid #FFF;
        border-radius: 5px;
        color: #F8F8F8;
        font-size: 17px;
        font-weight: 600;
        height: 35px;
        width: 160px;
    }

    /*Labels for defensive positions*/
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
    .first-base {
        left: 463px;
        top: 330px;
    }

    .second-base {
        left: 470px;
        top: 180px;
    }

    .third-base {
        left: 215px;
        top: 270px;
    }

    .short-stop {
        left: 208px;
        top: 120px;
    }

    .left-field {
        left: 140px;
        top: 0px;
    }

    .center-field {
        left: 340px;
        top: -80px;
    }

    .right-field {
        left: 532px;
        top: -60px;
    }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    /*Labels for runners and batter*/
=======
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
    /*Labels for runners and batter*/
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
    /*Labels for runners and batter*/
>>>>>>> b47d29c (reset main branch to Nadav)
    .first-base-label,
    .second-base-label,
    .third-base-label,
    .current-batter {
        text-align: center;
    }

    .first-base-label {
        left: 414px;
        top: 110px;
    }

    .second-base-label {
        left: 310px;
        top: -73px;
    }

    .third-base-label {
        left: 205px;
        top: 10px;
    }

    .current-batter {
        left: 310px;
        top: 310px;
    }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
    .first-base-prompt {
        left: 390px;
        top: -219px;
    }

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
    .second-base-prompt {
        left: 283px;
        top: -342px;
    }

    .third-base-prompt {
        left: 176px;
        top: -175px;
    }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    /*Inning tracker*/
=======
=======
>>>>>>> 2403aa7 (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> 3b13cb3 (fixed merged solution issue)
    /*Inning tracker CSS*/
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
    /*Inning tracker*/
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
    /*Inning tracker*/
>>>>>>> b47d29c (reset main branch to Nadav)
    .inning-tracker-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        height: 200px;
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        margin: 15px auto;
=======
        margin-top: 10px;
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
        margin: 15px auto;
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
        margin: 15px auto;
>>>>>>> b47d29c (reset main branch to Nadav)
        width: 100%;
    }

    .inning-info-container {
        margin: 20px 0 0 20px;
    }

        .inning-info-container th,
        .inning-info-container td {
            border: 5px solid #FFF;
        }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .inning-info-container .inning-info-header p {
            font-size: 24px;
            margin-bottom: 0px;
        }

    .inning-info-header {
        background-color: #17254c;
        color: #FFF;
        font-weight: 600;
        height: 40px;
        text-align: center;
        width: 120px;
    }
<<<<<<< HEAD
=======
        .inning-info-container p {
            font-size: 16px;
            margin-bottom: 0px;
        }

        .inning-info-container .inning-info-header {
            background-color: #17254c;
            color: #FFF;
            font-size: 16px;
            font-weight: 600;
            height: 40px;
            text-align: center;
            width: 120px;
        }
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
        .inning-info-container .inning-info-header p {
            font-size: 24px;
            margin-bottom: 0px;
        }

    .inning-info-header {
        background-color: #17254c;
        color: #FFF;
        font-weight: 600;
        height: 40px;
        text-align: center;
        width: 120px;
    }
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> b47d29c (reset main branch to Nadav)


    .blank-indicator,
    .green-indicator,
    .red-indicator {
        border-radius: 100%;
        display: inline-block;
        height: 20px;
        margin: -4px 2px;
        width: 20px;
    }

    .blank-indicator {
        background-color: #ddd;
        border: 1px solid #000;
    }

    .green-indicator {
        background-color: #1B1;
    }

    .red-indicator {
        background-color: #B11;
    }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)
    .number-indicator {
        display: inline-block;
        font-size: 24px;
        margin: 0 0 0 4px;
    }

    /*Play by play*/
    .play-by-play-container {
        overflow-y: scroll;
        width: 100%;
    }

    .play-by-play-list {
        margin: 0 auto;
        text-align: left;
    }

        .play-by-play-list li {
            background-color: rgba(0,0,0,0.1);
            font-size: 16px;
            height: 30px;
            list-style-type: none;
            margin: 5px 25px;
        }
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)

    .green-play-indicator,
    .red-play-indicator {
        display: inline-block;
        font-size: 18px;
        font-weight: 800;
        height: 30px;
        margin-right: 10px;
        text-align: center;
        width: 30px;
    }

    .green-play-indicator {
        background-color: #1B1;
    }

    .red-play-indicator {
        background-color: #A00;
        color: #FFF;
    }


/*     .batter-up-next-dropdown{
        font-weight: 600;
        position: relative;
        left: -28px;
        max-width: 180px;
    } */

    /* Tablet */
    @@media only screen and (min-width: 426px) and (max-width: 768px) {
<<<<<<< HEAD
=======
    .number-indicator{
=======
    .number-indicator {
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
        display: inline-block;
        font-size: 24px;
        margin: 0 0 0 4px;
    }

    /*Play by play*/
    .play-by-play-container {
        overflow-y: scroll;
        width: 100%;
    }

    .play-by-play-list {
        margin: 0 auto;
        text-align: left;
    }

    .play-by-play-list li {
        background-color: rgba(0,0,0,0.1);
        font-size: 16px;
        height: 30px;
        list-style-type: none;
        margin: 5px 25px;
    }
=======
>>>>>>> 6b55d49 (working on adding stealing base functionality)

    .green-play-indicator,
    .red-play-indicator {
        display: inline-block;
        font-size: 18px;
        font-weight: 800;
        height: 30px;
        margin-right: 10px;
        text-align: center;
        width: 30px;
    }

    .green-play-indicator {
        background-color: #1B1;
    }

    .red-play-indicator {
        background-color: #A00;
        color: #FFF;
    }

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> 29e156e (fixed merged solution issue)
=======

/*     .batter-up-next-dropdown{
        font-weight: 600;
        position: relative;
        left: -28px;
        max-width: 180px;
    } */

>>>>>>> a918cb0 (working on adding stealing base functionality)
    /* Tablet */
<<<<<<< HEAD
    @@media only screen and (min-width: 427px) and (max-width: 768px) {
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
    @@media only screen and (min-width: 426px) and (max-width: 768px) {
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .diamond-container {
            height: 362px;
            width: 396px;
        }

        .position-label {
            font-size: 15px;
            height: 23px;
            width: 23px;
        }

        .player-label {
            font-size: 10px;
            height: 31px;
            width: 60px;
        }

        .player-on-base-prompt {
            font-size: 10px;
            font-weight: 600;
            width: 140px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .batter-prompt {
            left: 83px;
            top: -312px;
        }

        #BatterActionList {
            font-size: 12px;
        }

        .batter-action-button-container {
            height: 40px;
            left: 177px;
            width: 40px;
            top: -99px;
        }

        .batter-action-button {
            font-size: 10px;
            height: 43px;
            width: 32px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .first-base {
            left: 256px;
            top: 177px;
        }

        .second-base {
            left: 262px;
            top: 92px;
        }

        .third-base {
            left: 116px;
            top: 131px;
        }

        .short-stop {
            left: 112px;
            top: 46px;
        }

        .left-field {
            left: 76px;
            top: -20px;
        }

        .center-field {
            left: 187px;
            top: -68px;
        }

        .right-field {
            left: 294px;
            top: -68px;
        }

        .first-base-label {
            left: 225px;
            top: 15px;
        }

        .second-base-label {
            left: 169px;
            top: -91px;
        }

        .third-base-label {
            left: 109px;
            top: -47px;
        }

        .current-batter {
            left: 169px;
            top: 130px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .first-base-prompt {
            left: 188px;
            top: -255px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .second-base-prompt {
            left: 128px;
            top: -298px;
        }

        .third-base-prompt {
            left: 70px;
            top: -208px;
        }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        /*Inning tracker CSS*/
        .inning-info-container {
            margin: 0;
        }

        .inning-info-header {
            width: 64px;
        }

        .inning-info-container .inning-info-header p {
            font-size: 16px;
            margin-bottom: 0px;
        }

        .number-indicator {
            font-size: 20px;
            margin: 0 0 0 4px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .play-by-play-list {
            padding-left: 0;
        }

            .play-by-play-list li {
                font-size: 12px;
                height: 27px;
                margin: 5px 0;
            }

        .green-play-indicator,
        .red-play-indicator {
<<<<<<< HEAD
=======
        .play-by-play-list{
=======
        .play-by-play-list {
>>>>>>> 6b55d49 (working on adding stealing base functionality)
            padding-left: 0;
        }

            .play-by-play-list li {
                font-size: 12px;
                height: 27px;
                margin: 5px 0;
            }

        .green-play-indicator,
<<<<<<< HEAD
        .red-play-indicator{
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
        .red-play-indicator {
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
            font-size: 16px;
            height: 27px;
            margin-right: 5px;
            width: 27px;
        }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
>>>>>>> b47d29c (reset main branch to Nadav)

/*         .batter-up-next-dropdown {
            font-size: 14px;
            left: -24px;
            top: -60px;
            width: 140px;
        } */
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
    }

    /* phone */
    @@media only screen and (min-width: 320px) and (max-width: 426px) {
        .diamond-container {
            height: 274px;
            width: 300px;
        }

        .position-label {
            font-size: 12px;
            height: 18px;
            width: 18px;
        }

        .player-label {
            font-size: 9px;
            height: 28px;
            width: 45px;
        }

        .player-on-base-prompt {
            font-size: 10px;
            font-weight: 600;
            width: 140px;
        }

            .player-on-base-prompt button {
                height: 24px;
            }

                .player-on-base-prompt button:hover {
                    font-weight: 800;
                    height: 26px;
                    margin: 2px 0 2px 0;
                }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        .batter-prompt {
=======
        .batter-prompt {

>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
        .batter-prompt {
>>>>>>> 29e156e (fixed merged solution issue)
=======
        .batter-prompt {
>>>>>>> b47d29c (reset main branch to Nadav)
            left: 32px;
            top: -360px;
        }

        .batter-action-button-container {
            height: 30px;
            left: 134px;
            width: 30px;
            top: -97px;
        }

        .batter-action-button {
            font-size: 9px;
            height: 45px;
            width: 9px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .first-base {
            left: 193px;
            top: 132px;
        }

        .second-base {
            left: 196px;
            top: 66px;
        }

        .third-base {
            left: 89px;
            top: 96px;
        }

        .short-stop {
            left: 83px;
            top: 30px;
        }

        .left-field {
            left: 60px;
            top: -26px;
        }

        .center-field {
            left: 140px;
            top: -60px;
        }

        .right-field {
            left: 222px;
            top: -62px;
        }

        .first-base-label {
            left: 171px;
            top: 3px;
        }

        .second-base-label {
            left: 126px;
            top: -82px;
        }

        .third-base-label {
            left: 81px;
            top: -53px;
        }

        .current-batter {
            left: 126px;
            top: 95px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .first-base-prompt {
            left: 125px;
            top: -235px;
        }

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        .second-base-prompt {
            left: 80px;
            top: -266px;
        }

        .third-base-prompt {
            left: 35px;
            top: -202px;
        }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
        /*Inning tracker CSS*/
        .inning-info-container {
            margin: 0;
        }

        .inning-info-header {
            width: 57px;
        }

        .inning-info-container .inning-info-header p {
            font-size: 16px;
            margin-bottom: 0px;
        }

        .blank-indicator,
        .green-indicator,
        .red-indicator {
            height: 16px;
            width: 16px;
        }

        .number-indicator {
            font-size: 18px;
            margin: 0 0 0 1px;
        }

        .play-by-play-list {
            padding-left: 0;
        }

            .play-by-play-list li {
                font-size: 12px;
                height: 18px;
                margin: 5px 0;
            }

        .green-play-indicator,
        .red-play-indicator {
            font-size: 12px;
            height: 18px;
            margin-right: 2px;
            width: 18px;
        }
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
>>>>>>> b47d29c (reset main branch to Nadav)

/*         .batter-up-next-dropdown {
            font-size: 12px;
            left: -8px;
            top: -50px;
            width: 110px;
        } */
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
=======
>>>>>>> 040d56e (started working on play by play in scorekeeping view)
=======
>>>>>>> 6b55d49 (working on adding stealing base functionality)
=======
>>>>>>> b47d29c (reset main branch to Nadav)
    }
</style>