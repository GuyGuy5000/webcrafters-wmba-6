@model wmbaApp.Models.Game
<hr />
<partial name="_addGameLocationModal" />
<form asp-action="Create" class="mx-auto mt-4 games-editform" id="createForm" style="width: 80%;">

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <fieldset>
        <partial name="_ViewHeading" />

            <div class="form-group">
            <label asp-for="DivisionID" class="control-label required-label"></label>
                <select asp-for="DivisionID" class="form-control" asp-items="ViewBag.DivisionID">
                    <option value="">--Select Division--</option>
                </select>
                <span asp-validation-for="DivisionID" class="text-danger"></span>
            </div>

            <div class="form-group">
            <label asp-for="HomeTeamID" class="control-label required-label"></label>
                <select asp-for="HomeTeamID" class="form-control" asp-items="ViewBag.HomeTeamID">
                    <option value="">--Select Team--</option>
                </select>
                <span asp-validation-for="HomeTeamID" class="text-danger"></span>
            </div>

            <div class="form-group">
            <label asp-for="AwayTeamID" class="control-label required-label"></label>
                <select asp-for="AwayTeamID" class="form-control" asp-items="ViewBag.AwayTeamID">
                    <option value="">--Select Team--</option>
                </select>
                <span asp-validation-for="AwayTeamID" class="text-danger"></span>
            </div>

            <div class="form-group">
            <label asp-for="GameStartTime" class="control-label required-label"></label>
                <input asp-for="GameStartTime" class="form-control" />
                <span asp-validation-for="GameStartTime" class="text-danger"></span>
            </div>

            <div class="form-group">
            <label asp-for="GameEndTime" class="control-label required-label"></label>
                <input asp-for="GameEndTime" class="form-control" />
                <span asp-validation-for="GameEndTime" class="text-danger"></span>
            </div>

        @* game location *@
        <div class="form-group">
            <label asp-for="GameLocationID" class="control-label"></label>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <button class="btn btn-outline-secondary" id="nowAddGameLocation" data-bs-toggle="modal" data-bs-target="#addGameLocationModal" type="button">&#x2795;</button>
                </div>
                <select asp-for="GameLocationID" class="form-control" asp-items="ViewBag.GameLocationID">
                    <option value="">Select Location</option>
                </select>
            </div>
        </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-outline-dark">Back to Game List</a>
            </div>

    </fieldset>

</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/site.js"></script>
    <script src="~/js/modal.js"></script>
    <script src="~/js/refreshDDL.js"></script>

<script type="text/javascript">
        $('#submitGameLocationCreate').click(function (event) {
            event.preventDefault();
            ClearErrors();
            var form = $('#createGameLocationForm');
            if (form.valid()) {
                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function () {
                        $('#addGameLocationModal').modal('hide');
                    },
                    error: function (xhr) { //Note: xhr is the XMLHttpRequest
                        var errorMessages = [];
                        switch (xhr.status) {
                            case 401:
                                errorMessages.push("You must be logged in first.");
                                break;
                            case 403:
                                errorMessages.push("You are not authorized for this action.");
                                break;
                            default:
                                //Messages coming from the Model State Errors
                                //We split on the | delimeter and the .slice removes the last one
                                errorMessages = xhr.responseText.split("|").slice(0, -1);
                        }
                        //This checks if there are any elements with some content
                        //and if not then it provides a default feedback message.
                        if (!errorMessages.some((str) => str !== "")) {
                            errorMessages.push("Error: Unable to complete operation");
                        }
                        //Put the messages in the ErrorList ul contained in the 'ValidaitonSummary' div.
                        var ul = document.getElementById("ErrorList");
                        for (var i = 0; i < errorMessages.length; i++) {
                            var errorMessage = errorMessages[i];
                            var li = document.createElement("li");
                            li.innerHTML = errorMessage;
                            ul.appendChild(li);
                        }
                    }
                });
            }
            return false;
        });

        $('#addGameLocationModal').on('hide.bs.modal', function () {
            document.getElementById("createGameLocationForm").reset(); //to clear the data in the popup form
            ClearErrors();
            var selectedOption = $('#GameLocationID').val();//Return to the current selected value
            refreshDDL('GameLocationID', '/Games/GetGameLocations/' + selectedOption, false, null, true, 'Select Location', true);
        });

        function ClearErrors() {
            //Empty out the list of validation errors if there are any
            var ul = document.getElementById("ErrorList");
            while (ul.firstChild) {
                ul.removeChild(ul.firstChild);
            }
        }
    </script>
}
