@model wmbaApp.Models.Game
<hr />
<partial name="_addGameLocationModal" />
<form asp-action="Edit" id="editform" class="mx-auto mt-4 games-editform" style="width: 80%;">
    <fieldset>
        <partial name="_ViewHeading" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="ID" />

        <div class="form-group">
            <label asp-for="DivisionID" class="control-label"></label>
            <select asp-for="DivisionID" class="details-appearance" asp-items="ViewBag.DivisionID" disabled>
                <option value="">--Select Division--</option>
            </select>
            <span asp-validation-for="DivisionID" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="HomeTeamID" class="control-label"></label>
            <select asp-for="HomeTeamID" class="details-appearance" asp-items="ViewBag.HomeTeamID" disabled>
                <option value="">--Select Home Team--</option>
            </select>
            <span asp-validation-for="HomeTeamID" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="AwayTeamID" class="control-label"></label>
            <select asp-for="AwayTeamID" class="details-appearance" asp-items="ViewBag.AwayTeamID" disabled>
                <option value="">--Select Away Team--</option>
            </select>
            <span asp-validation-for="AwayTeamID" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="control-label required-label">Date</label>
            <input type="date" id="GameDate" class="form-control" />
            <span class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="control-label required-label">Start Time</label>
            <input type="time" id="StartTime" class="form-control" />
            <span class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="control-label required-label">Duration (in hours)</label>
            <input type="number" id="Duration" class="form-control" max="2" />
            <span class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="GameEndTime" class="control-label required-label"></label>
            <input asp-for="GameEndTime" id="GameEndTime" class="form-control" readonly />
            <span asp-validation-for="GameEndTime" class="text-danger"></span>
        </div>

        <div class="form-group">
           
            <input asp-for="GameStartTime" id="GameStartTime" class="form-control" type="hidden" readonly />
            <span asp-validation-for="GameEndTime" class="text-danger"></span>
        </div>

        @* game location *@
        <div class="form-group">
            <label asp-for="GameLocationID" class="control-label"></label>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <button class="btn btn-outline-secondary" id="nowAddGameLocation" data-bs-toggle="modal" data-bs-target="#addGameLocationModal" type="button">&#x2795;</button>
                </div>
                <select asp-for="GameLocationID" class="form-control" asp-items="ViewBag.GameLocationID">
                    <option value="">Select Location</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <input type="submit" id="btnView" value="Save" class="btn btn-outline-dark" />
            <button type="button" id="tmsBck" class="btn btn-outline-dark" onclick="openModal()">Back</button>
        </div>

        <div id="customModal" class="modal">
            <div class="modal-content">
                <span class="close" id="close" onclick="closeModal()">&times;</span>
                <b><p id="question">Are you done, have you reviewed it?</p></b>
                <b><p id="required">All Fields are required</p></b>
                <i></i>
                <i id="saveCheck" class="fa-solid fa-question fa-f6"></i>
                <input type="submit" id="hideBtn" value="Save" class="btn btn-outline-dark" />

                <i id="error" class="fa-solid fa-xmark fa-f6"></i>
                <a asp-action="Index" id="bck" class="btn btn-outline-dark" onclick="closeModal()">Back</a>
            </div>
        </div>
    </fieldset>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/site.js"></script>
    <script src="~/js/modal.js"></script>
    <script src="~/js/refreshDDL.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Duration, #StartTime, #GameDate').change(function () {
                calculateEndDateTime();
            });

            function calculateEndDateTime() {
                var gameDate = $('#GameDate').val();
                var startTime = $('#StartTime').val();
                var durationHours = parseInt($('#Duration').val());

                // Limit duration to a maximum of 2 hours
                if (durationHours > 2) {
                    durationHours = 2;
                    $('#Duration').val(durationHours);
                }

                if (gameDate && startTime && durationHours) {
                    // Splitting the startTime string into hours and minutes
                    var [hours, minutes] = startTime.split(':');

                    // Convert hours and minutes to integers
                    hours = parseInt(hours);
                    minutes = parseInt(minutes);

                    // Subtract 4 hours from the hours component
                    hours -= 4;

                    // If the result is negative, adjust it to the previous day
                    if (hours < 0) {
                        // Subtract one day from the gameDate
                        var previousDay = new Date(gameDate);
                        previousDay.setDate(previousDay.getDate() - 1);
                        gameDate = previousDay.toISOString().split('T')[0]; // Get the date in 'YYYY-MM-DD' format
                        hours += 24; // Add 24 hours to get the correct hour on the previous day
                    }

                    // Combine the adjusted hours and minutes into a string
                    var adjustedStartTime = ('0' + hours).slice(-2) + ':' + ('0' + minutes).slice(-2);

                    var startDate = new Date(gameDate + 'T' + adjustedStartTime);

                    // Convert duration from hours to milliseconds
                    var durationMilliseconds = durationHours * 60 * 60 * 1000;

                    var startDate = new Date(startDate.getTime())
                    var startTime = startDate.toISOString().slice(0, 16);
                    $('#GameStartTime').val(startTime);
                    var endDate = new Date(startDate.getTime() + durationMilliseconds);

                    // Format end time to ISO string (e.g., "YYYY-MM-DDTHH:mm")
                    var endTime = endDate.toISOString().slice(0, 16);

                    // Set GameEndTime
                    $('#GameEndTime').val(endTime);
                }
            }
        });
    </script>
}


