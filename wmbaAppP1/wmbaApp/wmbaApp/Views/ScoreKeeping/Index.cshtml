@using wmbaApp.ViewModels
@model wmbaApp.ViewModels.GameScoreKeepingVM

<div id="ScoreBar">
<<<<<<< HEAD
=======
<div id="scoreBar">
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> 29e156e (fixed merged solution issue)
    <partial name="_ScoreBar" model="@Model" />
</div>

<div id="BaseballDiamond">
<<<<<<< HEAD
<<<<<<< HEAD
    <partial name="_BaseballDiamond" model="@Model.Innings[Model.CurrentInning]" />
=======
    <partial name="_BaseballDiamond" model="@Model.Innings[0]" />
>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
    <partial name="_BaseballDiamond" model="@Model.Innings[Model.CurrentInning]" />
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
</div>

<div id="InningsTable">
    <partial name="_InningsTable" model="@Model" />
</div>

<input id="gameScoreKeepningJSON" type="hidden" value='@Json.Serialize(Model)' />

@section Scripts{
<<<<<<< HEAD
<<<<<<< HEAD
    <!--Player on base action-->
    <script type="text/javascript">
        AssignClickEvents();

        //shows the batter action prompt
        function ShowBatterAction() {
            $('#batterActionPrompt').show();
        }

<<<<<<< HEAD
        function HideBatterAction() {
            $('#batterActionPrompt').hide();
        }

=======
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
        //reassigns click events. Use when posting back and refreshing the partial view, or on first time load
        function AssignClickEvents() {
            //assigns click events to the player on base buttons
            $("button[name='playerOnBase']").each(function () {
                $(`#${this.id}`).click(function () {
                    HandlePlayerOnBase(this);
                });
            });

<<<<<<< HEAD
            //assigns click events to the steal prompt buttons
            $("button[name='stealPrompt']").each(function () {
                $(`#${this.id}`).click(function () {
                    console.log("guga");
                    //HandleSteal(this):
                });
            });

=======
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
            //assigns a click event to the batter submit button
            $("#batterActionSubmit").click(function () {
                HandleBatterAction();
            });
        }

        //handles any runners that are on base
        function HandlePlayerOnBase(sender) {
            //postback
            $.ajax({
                url: "@Url.Action("HandlePlayerOnBase", "ScoreKeeping")",
                data: { inningScoreKeepningJSON: $("#inningScoreKeepingJSON").val(), senderID: `${sender.id}`, senderAction: `${sender.value}` }, //dictionary with same keys as the method's params
                type: "Post",
                success: function (result) {
                    $("#BaseballDiamond").html(""); //reset the div
                    $("#BaseballDiamond").html(result); // set the div to the result of the postback
                    AssignClickEvents();
                    UpdateGame();
                },
                error: function (result, status, err) {
                    window.alert("Player on base action " + result.responseText + " " + status.responseText, err.Message);
                }
            });
        }

        //handles the current batter's action
        function HandleBatterAction() {
            //postback
            $.ajax({
                url: "@Url.Action("HandleBatterAction", "ScoreKeeping")",
                data: { inningScoreKeepningJSON: $("#inningScoreKeepingJSON").val(), actionID: $("#BatterActionList").val() }, //dictionary with same keys as the method's params
                type: "Post",
                success: function (result) {
                    $("#BaseballDiamond").html(""); //reset the div
                    $("#BaseballDiamond").html(result); // set the div to the result of the postback
                    AssignClickEvents();
                    UpdateGame();
                },
                error: function (result, status, err) {
                    window.alert("batter action" + result.responseText + " " + status.responseText, err.Message);
                }
            });
        }

        //retrieves an updated JSON of the game and updates the hidden gameScoreKeepingJSON field
        function UpdateGame() {
            var game = JSON.parse($("#gameScoreKeepningJSON").val());
            //postback
            $.ajax({
                url: "@Url.Action("UpdateGameScoreKeeping", "ScoreKeeping")",
                data: { gameJSON: $("#gameScoreKeepningJSON").val(), currentInningJSON: $("#inningScoreKeepingJSON").val() }, //dictionary with same keys as the method's params
                type: "Post",
                success: function (result) {
                    $("#gameScoreKeepningJSON").val(result); // set the div to the result of the postback
                    var updatedGame = JSON.parse(result);
<<<<<<< HEAD
=======
                    console.log(game);
                    console.log(updatedGame);
>>>>>>> 54c95fb (Modified scorekeeping to update partial views automatically. Added strike, ball, and out conter to inning tracker section.)
                    if (updatedGame.currentInning > game.currentInning)
                        StartNewInning();

                    UpdateScorePartial();
                    UpdateInningsTablePartial();

                },
                error: function (result, status, err) {
                    window.alert("Update game " + result.responseText + " " + status.responseText, err.Message);
                }
            });
        }

        function StartNewInning() {
            //postback
            $.ajax({
                url: "@Url.Action("StartNewInning", "ScoreKeeping")",
                data: { gameScoreKeepingJSON: $("#gameScoreKeepningJSON").val() }, //dictionary with same keys as the method's params
                type: "Post",
                success: function (result) {
                    $("#BaseballDiamond").html(""); //reset the div
                    $("#BaseballDiamond").html(result); // set the div to the result of the postback
                    AssignClickEvents();
                },
                error: function (result, status, err) {
                    window.alert("Update game " + result.responseText + " " + status.responseText, err.Message);
                }
            });
        }

        function UpdateScorePartial() {
            //postback
            $.ajax({
                url: "@Url.Action("UpdateScorePartial", "ScoreKeeping")",
                data: { gameJSON: $("#gameScoreKeepningJSON").val() }, //dictionary with same keys as the method's params
                type: "Post",
                success: function (result) {
                    $("#ScoreBar").html(""); //reset the div
                    $("#ScoreBar").html(result); // set the div to the result of the postback
                },
                error: function (result, status, err) {
                    window.alert("Update score " + result.responseText + " " + status.responseText, err.Message);
                }
            });
        }

        function UpdateInningsTablePartial() {
            //postback
            $.ajax({
                url: "@Url.Action("UpdateInningsTablePartial", "ScoreKeeping")",
                data: { gameJSON: $("#gameScoreKeepningJSON").val() }, //dictionary with same keys as the method's params
                type: "Post",
                success: function (result) {
                    $("#InningsTable").html(""); //reset the div
                    $("#InningsTable").html(result); // set the div to the result of the postback
                },
                error: function (result, status, err) {
                    window.alert("Update score " + result.responseText + " " + status.responseText, err.Message);
                }
            });
        }
    </script>

}
<<<<<<< HEAD
=======
=======
    <!--Player on base action-->
>>>>>>> bd39385 (Added pitch button and batter actions select list for scorekeeping.)
    <script type="text/javascript">
        AssignClickEvent();
        function AssignClickEvent() {
            $("button[name='playerOnBase']").each(function () {
                $(`#${this.id}`).click(function () {
                    HandlePlayerOnBase(this);
                });
            });
        }
        function HandlePlayerOnBase(sender) {
            //postback
            $.ajax({
                url: "@Url.Action("HandlePlayerOnBase", "ScoreKeeping")",
                data: { inningScoreKeepningJSON: $("#inningScoreKeepingJSON").val(), senderID: `${sender.id}`, senderAction: `${sender.value}` }, //dictionary with same keys as the method's params
                type: "Post",
                success: function (result) {
                    $("#BaseballDiamond").html(""); //reset the div
                    $("#BaseballDiamond").html(result); // set the div to the result of the postback
                    AssignClickEvent();
                },
                error: function (result, status, err) {
                    window.alert(result.responseText + " " + status.responseText, err.Message);
                }
            });
        }
    </script>

    <!--Batter action-->
    <script type="text/javascript">
        function ShowBatterAction() {
            $('#batterActionPrompt').show();
        }
    </script>
}


>>>>>>> ba5fa4e (Updated scorekeeping view and ViewModels. Scorekeeping view not yet completed)
=======
>>>>>>> 29e156e (fixed merged solution issue)
